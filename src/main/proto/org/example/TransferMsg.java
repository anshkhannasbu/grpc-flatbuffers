// automatically generated by the FlatBuffers compiler, do not modify

package org.example;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class TransferMsg extends Table {
  public static TransferMsg getRootAsTransferMsg(ByteBuffer _bb) { return getRootAsTransferMsg(_bb, new TransferMsg()); }
  public static TransferMsg getRootAsTransferMsg(ByteBuffer _bb, TransferMsg obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public TransferMsg __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long partId() { int o = __offset(4); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public boolean mutatePartId(long partId) { int o = __offset(4); if (o != 0) { bb.putInt(o + bb_pos, (int)partId); return true; } else { return false; } }
  public byte data(int j) { int o = __offset(6); return o != 0 ? bb.get(__vector(o) + j * 1) : 0; }
  public int dataLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }
  public ByteBuffer dataAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer dataInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public boolean mutateData(int j, byte data) { int o = __offset(6); if (o != 0) { bb.put(__vector(o) + j * 1, data); return true; } else { return false; } }

  public static int createTransferMsg(FlatBufferBuilder builder,
      long partId,
      int dataOffset) {
    builder.startObject(2);
    TransferMsg.addData(builder, dataOffset);
    TransferMsg.addPartId(builder, partId);
    return TransferMsg.endTransferMsg(builder);
  }

  public static void startTransferMsg(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addPartId(FlatBufferBuilder builder, long partId) { builder.addInt(0, (int)partId, (int)0L); }
  public static void addData(FlatBufferBuilder builder, int dataOffset) { builder.addOffset(1, dataOffset, 0); }
  public static int createDataVector(FlatBufferBuilder builder, byte[] data) { builder.startVector(1, data.length, 1); for (int i = data.length - 1; i >= 0; i--) builder.addByte(data[i]); return builder.endVector(); }
  public static void startDataVector(FlatBufferBuilder builder, int numElems) { builder.startVector(1, numElems, 1); }
  public static int endTransferMsg(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

